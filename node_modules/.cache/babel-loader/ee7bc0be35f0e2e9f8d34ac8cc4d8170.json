{"ast":null,"code":"var _jsxFileName = \"/Users/abbasmurudkar/Desktop/REACTJS/text_convertor/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport About from './components/About';\nimport { Navbar } from './components/Navbar';\nimport { Uppercase } from './components/Uppercase'; // import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { useState } from 'react';\nimport Alert from './components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setmode] = useState(\"light\");\n\n  const modes = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#011e48\";\n      showalert(\":DARK MODE ENABLE\", \"success\");\n      document.title = \"TEXT-CONVERTOR Dark-mode\";\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showalert(\":LIGHT MODE ENABLE\", \"success\");\n      document.title = \"TEXT-CONVERTOR\";\n    }\n  };\n\n  const [alert, setalert] = useState(null);\n\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: () => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Navbar, {\n                nav: \"TEXT CONVERTOR\",\n                about: \"About\",\n                mode: mode,\n                changemode: modes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(Alert, {\n                alert: alert\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(Uppercase, {\n                mode: mode,\n                showalert: showalert\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/about\",\n          children: /*#__PURE__*/_jsxDEV(About, {\n            mode: mode,\n            nav: \"TEXT CONVERTOR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"uRnCoe6VLQ3HqmLvTsNJhJI2HZI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/abbasmurudkar/Desktop/REACTJS/text_convertor/src/App.js"],"names":["About","Navbar","Uppercase","useState","Alert","App","mode","setmode","modes","document","body","style","backgroundColor","showalert","title","alert","setalert","message","type","msg","setTimeout"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,SAAT,QAA0B,wBAA1B,C,CACA;;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,OAAD,CAAhC;;AACA,QAAMK,KAAK,GAAG,MAAM;AAClB,QAAIF,IAAI,KAAK,OAAb,EAAsB;AACpBC,MAAAA,OAAO,CAAC,MAAD,CAAP;AACAE,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,SAAtC;AACAC,MAAAA,SAAS,CAAC,mBAAD,EAAsB,SAAtB,CAAT;AACAJ,MAAAA,QAAQ,CAACK,KAAT,GAAiB,0BAAjB;AACD,KALD,MAMK;AACHP,MAAAA,OAAO,CAAC,OAAD,CAAP;AACAE,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;AACAC,MAAAA,SAAS,CAAC,oBAAD,EAAuB,SAAvB,CAAT;AACAJ,MAAAA,QAAQ,CAACK,KAAT,GAAiB,gBAAjB;AACD;AACF,GAbD;;AAcA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;;AACA,QAAMU,SAAS,GAAG,CAACI,OAAD,EAAUC,IAAV,KAAmB;AACnCF,IAAAA,QAAQ,CACN;AACEG,MAAAA,GAAG,EAAEF,OADP;AAEEC,MAAAA,IAAI,EAAEA;AAFR,KADM,CAAR;AAMAE,IAAAA,UAAU,CAAC,MAAM;AACfJ,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAVD;;AAWA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,8BACA,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,MAAM,EAAE,MAAM;AAClC,gCACH;AAAA,sCACD,QAAC,MAAD;AAAQ,gBAAA,GAAG,EAAC,gBAAZ;AAA6B,gBAAA,KAAK,EAAC,OAAnC;AAA2C,gBAAA,IAAI,EAAEV,IAAjD;AAAuD,gBAAA,UAAU,EAAEE;AAAnE;AAAA;AAAA;AAAA;AAAA,sBADC,eAED,QAAC,KAAD;AAAO,gBAAA,KAAK,EAAEO;AAAd;AAAA;AAAA;AAAA;AAAA,sBAFC,eAGD,QAAC,SAAD;AAAW,gBAAA,IAAI,EAAET,IAAjB;AAAuB,gBAAA,SAAS,EAAEO;AAAlC;AAAA;AAAA;AAAA;AAAA,sBAHC;AAAA,4BADG;AAOF;AARA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADA,eAeA,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAEP,IAAb;AAAmB,YAAA,GAAG,EAAE;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA0BD;;GAtDQD,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport About from './components/About';\nimport { Navbar } from './components/Navbar';\nimport { Uppercase } from './components/Uppercase';\n// import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useState } from 'react'\nimport Alert from './components/Alert';\n\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\")\n  const modes = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\")\n      document.body.style.backgroundColor = \"#011e48\"\n      showalert(\":DARK MODE ENABLE\", \"success\")\n      document.title = \"TEXT-CONVERTOR Dark-mode\"\n    }\n    else {\n      setmode(\"light\")\n      document.body.style.backgroundColor = \"white\"\n      showalert(\":LIGHT MODE ENABLE\", \"success\")\n      document.title = \"TEXT-CONVERTOR\"\n    }\n  }\n  const [alert, setalert] = useState(null)\n  const showalert = (message, type) => {\n    setalert(\n      {\n        msg: message,\n        type: type\n      }\n    )\n    setTimeout(() => {\n      setalert(null)\n    }, 2000);\n  }\n  return (\n    <>\n      <Router>\n      <Switch>\n        <Route exact path=\"/\" render={() => {\n          return (\n       <> \n      <Navbar nav=\"TEXT CONVERTOR\" about=\"About\" mode={mode} changemode={modes} />\n      <Alert alert={alert} />\n      <Uppercase mode={mode} showalert={showalert} />\n      </>\n      ) \n       }}>\n\n        </Route>\n      </Switch> \n\n      <Switch>\n        <Route exact path=\"/about\">\n          <About mode={mode} nav={\"TEXT CONVERTOR\"} />\n        </Route> \n       </Switch> \n       </Router>\n\n    </>\n  )\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}