{"ast":null,"code":"var _jsxFileName = \"/Users/abbasmurudkar/Desktop/REACTJS/text_convertor/src/components/Uppercase.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Uppercase = props => {\n  _s();\n\n  const [text, settext] = useState(\"\"); // CHNAGING THE VALUE OF TEXTAREA  BY USING ONCHANGE FUNCTION\n\n  const changetext = event => {\n    // console.log(\"on change\")\n    settext(event.target.value);\n  }; //CHANGING TEXT TO UPPERCASE\n\n\n  const handleclick = () => {\n    if (text) {\n      // console.log(\"upper case was clicked\" + text);\n      let newtxt = text.toUpperCase();\n      settext(newtxt);\n      props.showalert(\":Converted to Uppercase\", \"success\");\n    } else {\n      props.showalert(\": Unsuccesfull to Uppercase!\", \"warning\");\n    }\n  }; // CHANGING TEXT TO LOWERCASE\n\n\n  const handleclick1 = () => {\n    if (text) {\n      let lowcase = text.toLowerCase();\n      settext(lowcase);\n      props.showalert(\":Converted to lowercase!\", \"success\");\n    } else {\n      props.showalert(\": Unsuccesfull to Lowercase!\", \"warning\");\n    }\n  }; // CLEARING THE TEXT\n\n\n  const handleclearclick1 = () => {\n    if (text) {\n      let cleartxt = \"\";\n      settext(cleartxt);\n      props.showalert(\":Text Cleared!\", \"success\");\n    } else {\n      props.showalert(\": No Text to clear!\", \"warning\");\n    }\n  }; // COPY THE TEXT ON CLIPBOARD\n\n\n  const handlecopyclick1 = async () => {\n    if (text) {\n      //asyn is a keyword that use await keyword to \n      await navigator.clipboard.writeText(text); // alert(\"SUCCESSEFULLY COPIED :-\" + text)\n\n      props.showalert(\":Copied Text!\", \"success\");\n    } else {\n      props.showalert(\":Copied Unsuccesfull Text!\", \"warning\");\n    } // simple way to have copy function by getting id\n    // var text = document.getElementById('txt-area')\n    // text.select()\n    // navigator.clipboard.writeText(text.value)\n\n  }; // CHANGING TEXT TO TITLE CASE\n\n\n  const handletitleclick1 = () => {\n    if (text) {\n      let sen = text.split(' ').map(text => text.charAt(0).toUpperCase() + text.slice(1).toLowerCase()).join(' ');\n      settext(sen);\n      props.showalert(\":Converted to Titlecase\", \"success\");\n    } else {\n      props.showalert(\": Unsuccesfull to TittleCase!\", \"warning\");\n    }\n  }; // REMOVING EXTRA SPACES BETWEEN TEXT\n\n\n  const handleextraclick1 = () => {\n    if (text) {\n      let space = text.split(/[ ]+/);\n      settext(space.join(' '));\n      props.showalert(\":Removed Extra Spaces\", \"success\");\n    } else {\n      props.showalert(\": Plzz enter the text to remove space\", \"warning\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: props.mode === 'light' ? 'black' : 'white'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"ENTER THE TEXT \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          style: {\n            backgroundColor: props.mode === 'light' ? 'white' : '#011e48',\n            color: props.mode === 'light' ? 'black' : 'white'\n          },\n          onChange: changetext,\n          id: \"txt-area\",\n          rows: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-${props.mode === 'light' ? \"danger\" : \"primary\"} btn-sm mx-2`,\n        onClick: handleclearclick1,\n        children: \"CLEAR TEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-${props.mode === 'light' ? \"info\" : \"primary\"} btn-sm mx-2`,\n        onClick: handleclick,\n        children: \"TEXT UPPERCASE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-${props.mode === 'light' ? \"dark\" : \"primary\"} btn-sm mx-2`,\n        onClick: handlecopyclick1,\n        children: \"COPY TEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-${props.mode === 'light' ? \"warning\" : \"primary\"} btn-sm mx-2`,\n        onClick: handletitleclick1,\n        children: \"TITLE CASE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-${props.mode === 'light' ? \"success\" : \"primary\"} btn-sm mx-2`,\n        onClick: handleclick1,\n        children: \"TEXT LOWERCASE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-${props.mode === 'light' ? \"secondary\" : \"primary\"} btn-sm mx-2`,\n        onClick: handleextraclick1,\n        children: \"REMOVE EXTRA SPACE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"TEXT DATA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"WORDS:- \", text.split(\" \").length - 1, \" CHARACTERS:- \", text.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"MINTUES FOR READING THE CONTENT:-\", 0.008 * text.split(\" \").length, \"min\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"PREVIEW\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: text.length > 0 ? text : \"Plz enter the text to preview it here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Uppercase, \"CpJ+aDFQa4ocOyN/cDS5MS0XypA=\");\n\n_c = Uppercase;\n\nvar _c;\n\n$RefreshReg$(_c, \"Uppercase\");","map":{"version":3,"sources":["/Users/abbasmurudkar/Desktop/REACTJS/text_convertor/src/components/Uppercase.js"],"names":["React","useState","Uppercase","props","text","settext","changetext","event","target","value","handleclick","newtxt","toUpperCase","showalert","handleclick1","lowcase","toLowerCase","handleclearclick1","cleartxt","handlecopyclick1","navigator","clipboard","writeText","handletitleclick1","sen","split","map","charAt","slice","join","handleextraclick1","space","color","mode","backgroundColor","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nexport const Uppercase = (props) => {\n    const [text, settext] = useState(\"\")\n\n    // CHNAGING THE VALUE OF TEXTAREA  BY USING ONCHANGE FUNCTION\n    const changetext = (event) => {\n        // console.log(\"on change\")\n        settext(event.target.value)\n    }\n\n    //CHANGING TEXT TO UPPERCASE\n\n    const handleclick = () => {\n        if(text){\n        // console.log(\"upper case was clicked\" + text);\n        let newtxt = text.toUpperCase()\n        settext(newtxt)\n        props.showalert(\":Converted to Uppercase\",\"success\")\n    }\n    else{\n        props.showalert(\": Unsuccesfull to Uppercase!\",\"warning\")\n    }\n   \n  \n    }\n\n    // CHANGING TEXT TO LOWERCASE\n    const handleclick1 = () => {\n        if(text){\n        let lowcase = text.toLowerCase()\n        settext(lowcase)\n        props.showalert(\":Converted to lowercase!\",\"success\")\n    }\n    else{\n        props.showalert(\": Unsuccesfull to Lowercase!\",\"warning\")\n\n    }\n\n    }\n\n    // CLEARING THE TEXT\n    const handleclearclick1 = () => {\n        if(text){\n        let cleartxt = \"\"\n        settext(cleartxt)\n        props.showalert(\":Text Cleared!\",\"success\")\n    }\n    else{\n        props.showalert(\": No Text to clear!\",\"warning\")\n    }\n    }\n\n    // COPY THE TEXT ON CLIPBOARD\n    const handlecopyclick1 = async () => {\n        if (text) {  //asyn is a keyword that use await keyword to \n            await navigator.clipboard.writeText(text)\n            // alert(\"SUCCESSEFULLY COPIED :-\" + text)\n            props.showalert(\":Copied Text!\",\"success\")\n\n        }\n        else {\n            props.showalert(\":Copied Unsuccesfull Text!\",\"warning\")\n        }\n        // simple way to have copy function by getting id\n        // var text = document.getElementById('txt-area')\n        // text.select()\n        // navigator.clipboard.writeText(text.value)\n    }\n\n    // CHANGING TEXT TO TITLE CASE\n    const handletitleclick1 = () => {\n        if(text){\n        let sen = text.split(' ').map((text) => text.charAt(0).toUpperCase() + text.slice(1).toLowerCase()).join(' ')\n        settext(sen)\n        props.showalert(\":Converted to Titlecase\",\"success\")\n    }\n    else{\n        props.showalert(\": Unsuccesfull to TittleCase!\",\"warning\")\n    }\n\n    }\n\n    // REMOVING EXTRA SPACES BETWEEN TEXT\n    const handleextraclick1 = () => {\n        if(text){\n        let space = text.split(/[ ]+/);\n        settext(space.join(' '))\n        props.showalert(\":Removed Extra Spaces\",\"success\")\n    }\n    else{\n        props.showalert(\": Plzz enter the text to remove space\",\"warning\")\n    }\n\n    }\n\n\n    return (\n        <div style={{ color: props.mode ==='light'? 'black' : 'white' }}>\n            <div className=\"container my-4\" >\n                <div className=\"mb-3\">\n                    <h2>ENTER THE TEXT </h2>\n                    <textarea className=\"form-control\" value={text} style={{ backgroundColor: props.mode === 'light' ? 'white' : '#011e48', color: props.mode === 'light' ? 'black' : 'white'}} onChange={changetext} id=\"txt-area\" rows=\"6\" ></textarea>\n                </div>\n                <button className={`btn btn-${props.mode === 'light'? \"danger\":\"primary\"} btn-sm mx-2`} onClick={handleclearclick1}>CLEAR TEXT</button>\n                <button className={`btn btn-${props.mode === 'light'? \"info\":\"primary\"} btn-sm mx-2`}onClick={handleclick}>TEXT UPPERCASE</button>\n                <button className={`btn btn-${props.mode === 'light'? \"dark\":\"primary\"} btn-sm mx-2`} onClick={handlecopyclick1}>COPY TEXT</button>\n                <button className={`btn btn-${props.mode === 'light'? \"warning\":\"primary\"} btn-sm mx-2`} onClick={handletitleclick1}>TITLE CASE</button>\n                <button className={`btn btn-${props.mode === 'light'? \"success\":\"primary\"} btn-sm mx-2`} onClick={handleclick1}>TEXT LOWERCASE</button>\n                <button className={`btn btn-${props.mode === 'light'? \"secondary\":\"primary\"} btn-sm mx-2`} onClick={handleextraclick1}>REMOVE EXTRA SPACE</button>\n\n\n                <p></p>\n            </div>\n            <div className=\"container\">\n                <div className=\"mb-3\">\n                    <h2>TEXT DATA</h2>\n                    <p>WORDS:- {text.split(\" \").length-1} CHARACTERS:- {text.length}</p>\n                    <p>MINTUES FOR READING THE CONTENT:-{0.008 * text.split(\" \").length}min</p>\n                    <h2>PREVIEW</h2>\n                    <p>{text.length > 0 ? text : \"Plz enter the text to preview it here\"}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}