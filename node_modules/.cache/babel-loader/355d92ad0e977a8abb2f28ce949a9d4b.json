{"ast":null,"code":"import _slicedToArray from\"/Users/abbasmurudkar/Desktop/REACTJS/text_convertor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import About from'./components/About';import{Navbar}from'./components/Navbar';import{Uppercase}from'./components/Uppercase';import{BrowserRouter as Router,Switch,Route}from'react-router-dom';import{useState}from'react';import Alert from'./components/Alert';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(\"light\"),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setmode=_useState2[1];var modes=function modes(){if(mode===\"light\"){setmode(\"dark\");document.body.style.backgroundColor=\"#011e48\";showalert(\":DARK MODE ENABLE\",\"success\");document.title=\"TEXT-CONVERTOR Dark-mode\";}else{setmode(\"light\");document.body.style.backgroundColor=\"white\";showalert(\":LIGHT MODE ENABLE\",\"success\");document.title=\"TEXT-CONVERTOR\";}};var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setalert=_useState4[1];var showalert=function showalert(message,type){setalert({msg:message,type:type});setTimeout(function(){setalert(null);},2000);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Switch,{children:/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",render:function render(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{nav:\"TEXT CONVERTOR\",about:\"About\",mode:mode,changemode:modes}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(Uppercase,{mode:mode,showalert:showalert})]});}})}),/*#__PURE__*/_jsx(Switch,{children:/*#__PURE__*/_jsx(Route,{exact:true,path:\"/about\",children:/*#__PURE__*/_jsx(About,{mode:mode,nav:\"TEXT CONVERTOR\"})})})]})});}export default App;","map":{"version":3,"sources":["/Users/abbasmurudkar/Desktop/REACTJS/text_convertor/src/App.js"],"names":["About","Navbar","Uppercase","BrowserRouter","Router","Switch","Route","useState","Alert","App","mode","setmode","modes","document","body","style","backgroundColor","showalert","title","alert","setalert","message","type","msg","setTimeout"],"mappings":"0KAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,KAAkB,oBAAlB,CACA,OAASC,MAAT,KAAuB,qBAAvB,CACA,OAASC,SAAT,KAA0B,wBAA1B,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,MAAlC,CAA0CC,KAA1C,KAAuD,kBAAvD,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,C,6IACA,QAASC,CAAAA,GAAT,EAAe,CACb,cAAwBF,QAAQ,CAAC,OAAD,CAAhC,wCAAOG,IAAP,eAAaC,OAAb,eACA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClB,GAAIF,IAAI,GAAK,OAAb,CAAsB,CACpBC,OAAO,CAAC,MAAD,CAAP,CACAE,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,CAAsC,SAAtC,CACAC,SAAS,CAAC,mBAAD,CAAsB,SAAtB,CAAT,CACAJ,QAAQ,CAACK,KAAT,CAAe,0BAAf,CACD,CALD,IAMK,CACHP,OAAO,CAAC,OAAD,CAAP,CACAE,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,CAAsC,OAAtC,CACAC,SAAS,CAAC,oBAAD,CAAuB,SAAvB,CAAT,CACNJ,QAAQ,CAACK,KAAT,CAAiB,gBAAjB,CACG,CACA,CAbD,CAcA,eAA0BX,QAAQ,CAAC,IAAD,CAAlC,yCAAOY,KAAP,eAAcC,QAAd,eACA,GAAMH,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACI,OAAD,CAAUC,IAAV,CAAmB,CACnCF,QAAQ,CACN,CACEG,GAAG,CAAEF,OADP,CAEEC,IAAI,CAAEA,IAFR,CADM,CAAR,CAMAE,UAAU,CAAC,UAAM,CACfJ,QAAQ,CAAC,IAAD,CAAR,CACD,CAFS,CAEP,IAFO,CAAV,CAGD,CAVD,CAWA,mBACE,sCACA,MAAC,MAAD,yBACE,KAAC,MAAD,wBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,MAAM,CAAE,iBAAM,CAClC,mBACE,wCACE,KAAC,MAAD,EAAQ,GAAG,CAAC,gBAAZ,CAA6B,KAAK,CAAC,OAAnC,CAA2C,IAAI,CAAEV,IAAjD,CAAuD,UAAU,CAAEE,KAAnE,EADF,cAEE,KAAC,KAAD,EAAO,KAAK,CAAEO,KAAd,EAFF,cAGE,KAAC,SAAD,EAAW,IAAI,CAAET,IAAjB,CAAuB,SAAS,CAAEO,SAAlC,EAHF,GADF,CAOD,CARD,EADF,EADF,cAeE,KAAC,MAAD,wBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,QAAlB,uBACE,KAAC,KAAD,EAAO,IAAI,CAAEP,IAAb,CAAmB,GAAG,CAAE,gBAAxB,EADF,EADF,EAfF,GADA,EADF,CA0BD,CAED,cAAeD,CAAAA,GAAf","sourcesContent":["import './App.css';\nimport About from './components/About';\nimport { Navbar } from './components/Navbar';\nimport { Uppercase } from './components/Uppercase';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useState } from 'react'\nimport Alert from './components/Alert';\nfunction App() {\n  const [mode, setmode] = useState(\"light\")\n  const modes = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\")\n      document.body.style.backgroundColor = \"#011e48\"\n      showalert(\":DARK MODE ENABLE\", \"success\")\n      document.title=\"TEXT-CONVERTOR Dark-mode\"\n    }\n    else {\n      setmode(\"light\")\n      document.body.style.backgroundColor = \"white\"\n      showalert(\":LIGHT MODE ENABLE\", \"success\")\ndocument.title  =\"TEXT-CONVERTOR\"\n  }\n  }\n  const [alert, setalert] = useState(null)\n  const showalert = (message, type) => {\n    setalert(\n      {\n        msg: message,\n        type: type\n      }\n    )\n    setTimeout(() => {\n      setalert(null)\n    }, 2000);\n  }\n  return (\n    <>\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" render={() => {\n          return (\n            <>\n              <Navbar nav=\"TEXT CONVERTOR\" about=\"About\" mode={mode} changemode={modes} />\n              <Alert alert={alert} />\n              <Uppercase mode={mode} showalert={showalert}/>\n            </>\n          )\n        }}>\n\n        </Route>\n      </Switch>\n\n      <Switch>\n        <Route exact path=\"/about\">\n          <About mode={mode} nav={\"TEXT CONVERTOR\"} />\n        </Route>\n      </Switch>\n    </Router>\n\n  </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}